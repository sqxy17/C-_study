#include<iostream>
using namespace std;

//一、动态库/静态库      linux会讲，现在暂时理解为别人写好的程序给我用的程序，并且被编译好了
//1.现在是c++调用c的静/动态库是怎么样的        会出错，下面是解决办法
//之前c数据结构实现的操作函数有很多，（不是main函数所在的文件），那些文件编译后生成的是.lib文件        那些文件可以称作为库
//包头文件，还可以用路径的方式：include"../../stack.h"

//调用其他库，并不是单单的包头文件能解决的，还要在设置中的 链接器->常规->附加库目录->把包含所需要的.lib debug的上级文件选中（xxx/debug/.lib）
//并且要在输入->附加依赖性->输入xxx.lib，并用；间隔

//c没有函数修饰名规则

//使用
//extern"C"
//{
//#include"xxxx.h"
//}//这样c++就能成功的使用c的库函数
//就是告诉{}里面的函数是c++编译器编译的，链接的时候用c的函数名规则去找，就可以链接
//extern"C"
//{
//;
//}




//2：00：00——2：30：00   第五集    没看
//总结：不管是c++调c库，还是c调c++库，都要在c++中加上extern"C"

//第六节课 00：20：00   00：25：00







